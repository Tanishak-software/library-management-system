
#include<fstream.h> #include<conio.h> #include<stdio.h> #include<process.h> #include<string.h> #include<iomanip.h>

//***************************************************************
//	CLASSUSEDINPROJECT
//****************************************************************


classbook
{
char bno[6];charbname[50]; charaname[20];
public:
voidcreate_book()
{
cout<<"\nNEW BOOK ENTRY\n"; cout<<"**************\n";
 
cout<<"\nEnter the book no: "; cin>>bno;
cout<<"\n\nEnter the name of the book: "; gets(bname);
cout<<"\n\nEnter the author's name: "; gets(aname);
cout<<"\n\n\nBookCreatedSuccessfully!";
}


voidshow_book()
{
cout<<"\nBook no. : "<<bno; cout<<"\nBook Name : "; puts(bname);
cout<<"Author Name : "; puts(aname);
}


voidmodify_book()
{
cout<<"\nBook no. : "<<bno; cout<<"\nModify Book Name : "; gets(bname);
cout<<"\nModify Author's Name of Book : "; gets(aname);
}


char*retbno()
{
returnbno;
 
}


voidreport()
{cout<<bno<<setw(30)<<bname<<setw(30)<<aname<<endl;}
};


//classendshere class student
{
 







public:
 
charadmno[6]; char name[20]; char stbno[6]; int token;

voidcreate_student()
{
 
clrscr();
cout<<"\nNEWSTUDENTENTRY\n";
cout<<"*****************\n"; cout<<"\nEnter the admission no.: "; cin>>admno;
cout<<"\nEnter the name of the student: "; gets(name);
token=0; stbno[0]='/0';
cout<<"\n\nStudentRecordCreatedSuccessfully";
}


voidshow_student()
{
 
cout<<"\nAdmission no. : "<<admno; cout<<"\nStudent Name : "; puts(name);
cout<<"\nNo of books issued : "<<token; if(token==1)
cout<<"\nBookNo"<<stbno;
}


voidmodify_student()
{
cout<<"\nAdmission no. : "<<admno; cout<<"\nModify Student Name : "; gets(name);
}


char*retadmno()
{
returnadmno;
}


char*retstbno()
{
returnstbno;
}


intrettoken()
{
returntoken;
}
 
voidaddtoken()
{token=1;}
voidresettoken()
{token=0;}
voidgetstbno(chart[])
{
strcpy(stbno,t);
}


voidreport()
{cout<<"\t"<<admno<<setw(20)<<name<<setw(10)<<token<<endl;}
};
//classendshere


//***************************************************************
//	globaldeclarationforstreamobject,object
//****************************************************************


fstreamfp,fp1; book bk; student st;

//***************************************************************
//	functiontowriteinfile
//****************************************************************


voidwrite_book()
{
char ch; fp.open("book.dat",ios::out|ios::app);
 
do
{
clrscr(); bk.create_book();
fp.write((char*)&bk,sizeof(book));
cout<<"\n\nDo you want to add more record..(y/n?)"; cin>>ch;
}


while(ch=='y'||ch=='Y'); fp.close();
}


voidwrite_student()
{
char ch; fp.open("student.dat",ios::out|ios::app); do
{
st.create_student(); fp.write((char*)&st,sizeof(student));
cout<<"\n\nDo you want to add more record..(y/n?)"; cin>>ch;
}while(ch=='y'||ch=='Y'); fp.close();
}
 
//***************************************************************
//	functiontoreadspecificrecordfromfile
//****************************************************************


voiddisplay_spb(charn[])
{
cout<<"\nBOOK DETAILS\n"; cout<<"************\n";
int flag=0; fp.open("book.dat",ios::in);
while(fp.read((char*)&bk,sizeof(book)))
{
if(strcmpi(bk.retbno(),n)==0)
{
bk.show_book(); flag=1;
}
}
fp.close(); if(flag==0)
cout<<"\n\nBook does not exist"; getch();
}


voiddisplay_sps(charn[])
{
cout<<"\nSTUDENTDETAILS\n";
cout<<"***************\n"; int flag=0; fp.open("student.dat",ios::in);
 
while(fp.read((char*)&st,sizeof(student)))
{
if((strcmpi(st.retadmno(),n)==0))
{
st.show_student(); flag=1;
}
}
fp.close(); if(flag==0)
cout<<"\n\nStudent does not exist"; getch();
}


//***************************************************************
//	functiontomodifyrecordoffile
//****************************************************************


voidmodify_book()
{
char n[6];intfound=0; clrscr();
cout<<"\n\nMODIFYBOOKRECORD";
cout<<"\n*******************"; cout<<"\n\nEnter the book no.: "; cin>>n; fp.open("book.dat",ios::in|ios::out);
while(fp.read((char*)&bk,sizeof(book))&&found==0)
{
 
if(strcmpi(bk.retbno(),n)==0)
{
bk.show_book(); cout<<"\n============================="<<endl;
cout<<"Enter the new details of book"<<endl; cout<<"============================="<<endl;
bk.modify_book();
int pos=-1*sizeof(bk); fp.seekp(pos,ios::cur); fp.write((char*)&bk,sizeof(book));
cout<<"\n\n\t Record Updated Successfully"; found=1;
}
}


fp.close(); if(found==0)
cout<<"\n\n Record Not Found "; getch();
}


voidmodify_student()
{
char n[6];intfound=0; clrscr();
cout<<"\n\tMODIFYSTUDENTRECORD";
cout<<"\n\t*********************"; cout<<"\n\nEnter the admission no. of the student"; cin>>n;
 
fp.open("student.dat",ios::in|ios::out); while(fp.read((char*)&st,sizeof(student)) && found==0)
{
if(strcmpi(st.retadmno(),n)==0)
{
st.show_student();
cout<<"\nEnter the new details of student"<<endl; st.modify_student();
int pos=-1*sizeof(st); fp.seekp(pos,ios::cur); fp.write((char*)&st,sizeof(student));
cout<<"\n\n\tRecord Updated Successfully"; found=1;
}
}


fp.close(); if(found==0)
cout<<"\n\nRecord Not Found "; getch();
}


//***************************************************************
//	functiontodeleterecordoffile
//****************************************************************


voiddelete_student()
{
char n[6]; intflag=0;
 
clrscr();
cout<<"\nDELETESTUDENT";
cout<<"\n**************";
cout<<"\n\nEnter the admission no. of the student you want to delete : "; cin>>n;
fp.open("student.dat",ios::in|ios::out); fstream fp2;fp2.open("Temp.dat",ios::out); fp.seekg(0,ios::beg); while(fp.read((char*)&st,sizeof(student)))
{
if(strcmpi(st.retadmno(),n)!=0) fp2.write((char*)&st,sizeof(student));
 
else


}
 

flag=1;
 
fp2.close();
fp.close(); remove("student.dat");
rename("Temp.dat","student.dat"); if(flag==1)
cout<<"\n\n\tRecordDeletedSuccessfully";
else
cout<<"\n\nRecordnotfound";
getch();
}


voiddelete_book()
{
charn[6];
 
clrscr();
cout<<"\n\tDELETE BOOK"; cout<<"\n\t***********";
cout<<"\n\nEnter the book no. of the book you want to delete : "; cin>>n;
fp.open("book.dat",ios::in|ios::out); fstream fp2; fp2.open("Temp.dat",ios::out); fp.seekg(0,ios::beg); while(fp.read((char*)&bk,sizeof(book)))
{
if(strcmpi(bk.retbno(),n)!=0)
{
fp2.write((char*)&bk,sizeof(book));
}
}


fp2.close();
fp.close(); remove("book.dat");
rename("Temp.dat","book.dat"); cout<<"\n\n\tRecord Deleted Successfully"; getch();
}
 
//***************************************************************
//	functiontodisplayallstudentslist
//****************************************************************


voiddisplay_alls()
{
clrscr(); fp.open("student.dat",ios::in); if(!fp)
{
cout<<"ERROR!!!FILECOULDNOTBEOPEN";
getch(); return;
}

cout<<"\n\n\t\tSTUDENT LIST\n\n"; cout<<"=======================================================
===========\n";
cout<<"\tAdmission No."<<setw(10)<<"Name"<<setw(20)<<"Book Issued\n"; cout<<"=======================================================
===========\n";


while(fp.read((char*)&st,sizeof(student)))
{
st.report();
}


fp.close();
getch();
}
 
//***************************************************************
//	functiontodisplayBookslist
//****************************************************************


voiddisplay_allb()
{
clrscr(); fp.open("book.dat",ios::in); if(!fp)
{
cout<<"ERROR!!!FILECOULDNOTBEOPEN";
getch(); return;
}

cout<<"\n\n\t\t\tBOOK LIST\n\n"; cout<<"=======================================================
==================\n";
cout<<"Book Number"<<setw(15)<<"Book Name"<<setw(30)<<"Author\n"; cout<<"=======================================================
==================\n";


while(fp.read((char*)&bk,sizeof(book)))
{
bk.report();
}
fp.close();
getch();
}
 
//***************************************************************
//	functiontoissuebook
//****************************************************************


voidbook_issue()
{
char sn[6],bn[6];intfound=0,flag=0; clrscr();
cout<<"\n\nBOOK ISSUE"; cout<<"\n**********";
cout<<"\n\nEnter the Student's admission no."; cin>>sn;fp.open("student.dat",ios::in|ios::out); fp1.open("book.dat",ios::in|ios::out);
while(fp.read((char*)&st,sizeof(student))&&found==0)
{
if(strcmpi(st.retadmno(),sn)==0)
{
found=1; if(st.rettoken()==0)
{
cout<<"\n\nEnter the book no. "; cin>>bn;
while(fp1.read((char*)&bk,sizeof(book))&&flag==0)
{
if(strcmpi(bk.retbno(),bn)==0)
{
bk.show_book(); flag=1;
 
st.addtoken(); st.getstbno(bk.retbno()); int pos=-1*sizeof(st); fp.seekp(pos,ios::cur);
fp.write((char*)&st,sizeof(student));
cout<<"\n\n\t Book issued successfully\n\nPlease Note: Return the	book within 15 days.\nFine of Rs. 1 for each day after 15 days period will be charged.";
}
}
 




}
else


}
}
 
if(flag==0)
cout<<"Booknodoesnotexist";




cout<<"Youhavenotreturnedthelastbook";
 
if(found==0)
cout<<"Student record not exist..."; getch();
fp.close();
fp1.close();
}


//***************************************************************
//	functiontodepositbook
//****************************************************************


voidbook_deposit()
{
charsn[6],bn[6];
 
int found=0,flag=0,day,fine; clrscr();
cout<<"\nBOOKDEPOSIT";
cout<<"\n************";
cout<<"\n\n\tEnter the Student's admission no. : "; cin>>sn;
fp.open("student.dat",ios::in|ios::out); fp1.open("book.dat",ios::in|ios::out); while(fp.read((char*)&st,sizeof(student)) && found==0)
{
if(strcmpi(st.retadmno(),sn)==0)
{
found=1; if(st.rettoken()==1)
{
while(fp1.read((char*)&bk,sizeof(book))&&flag==0)
{
if(strcmpi(bk.retbno(),st.retstbno())==0)
{
bk.show_book(); flag=1;
cout<<"\n\nBook deposited in no. of days: "; cin>>day;
if(day>15)
{
fine=(day-15)*1;
cout<<"\n\nFinetobedepositedRs."<<fine;
}
st.resettoken();
intpos=-1*sizeof(st);
 
fp.seekp(pos,ios::cur); fp.write((char*)&st,sizeof(student)); cout<<"\n\n\t Book deposited successfully";
}
}
if(flag==0)
cout<<"Bookno.doesnotexist";
}
else
cout<<"Nobookisissued..pleasecheck!!";
}
}
if(found==0)
cout<<"Student record not exist..."; getch();
fp.close();
fp1.close();
}




//***************************************************************
//	INTRODUCTIONFUNCTION
//****************************************************************


voidintro()
{
clrscr(); gotoxy(26,11);
cout<<"LIBRARYMANAGEMENTSYSTEM";
gotoxy(26,12);
 
cout<<"*************************"; cout<<"\n\n\nMADE BY:\n";cout<<"\tMEENAL SINGH (A40320044)\n"; cout<<"\tBHAVYA JAIN(A40320053)\n"; cout<<"\tPRAGYA GUPTA (A40320009)\n"; cout<<"\tMOHIT YADAV(A40320001/21)\n"; cout<<"\tVINAY KUMAR(A40320049)\n";
cout<<"\n\tB.TECH CSE V SEM"; getch();
}


//***************************************************************
//	ADMINISTRATORMENUFUNCTION
//****************************************************************


voidadmin_menu()
{
clrscr(); intch2;
cout<<"\n\n\n\tADMINISTRATOR MENU"; cout<<"\n\n\t1.CREATE STUDENT RECORD"; cout<<"\n\n\t2.DISPLAY ALL STUDENTS RECORD"; cout<<"\n\n\t3.DISPLAY SPECIFIC STUDENT RECORD "; cout<<"\n\n\t4.MODIFY STUDENT RECORD"; cout<<"\n\n\t5.DELETE STUDENT RECORD";
cout<<"\n\n\t6.CREATE BOOK "; cout<<"\n\n\t7.DISPLAY ALL BOOKS "; cout<<"\n\n\t8.DISPLAY SPECIFIC BOOK ";
cout<<"\n\n\t9.MODIFY BOOK "; cout<<"\n\n\t10.DELETEBOOK";
 
cout<<"\n\n\t11.BACK TO MAIN MENU"; cout<<"\n\n\tPlease Enter Your Choice (1-11) "; cin>>ch2;
switch(ch2)
{
case1:clrscr();
write_student();break;case 2: display_alls();break;
case3:
charnum[6]; clrscr();
cout<<"\n\n\tPlease enter the Admission No. "; cin>>num;
display_sps(num); break;
case4:modify_student();break;
case5:delete_student();break;
case6:clrscr();
write_book();break; case7:display_allb();break;
case8:{
charnum[6]; clrscr();
cout<<"\n\n\tPlease Enter The book No. "; cin>>num;
display_spb(num); break;
}
case9:modify_book();break;
case10:delete_book();break;
 
case 11: return; default:cout<<"\a";
}
admin_menu();
}


//***************************************************************
//	THEMAINFUNCTIONOFPROGRAM
//****************************************************************


voidmain()
{
charch; intro(); do
{
clrscr();
cout<<"\n\n\n\tMAIN MENU";cout<<"\n\n\t01. BOOK ISSUE"; cout<<"\n\n\t02. BOOK DEPOSIT"; cout<<"\n\n\t03. ADMINISTRATOR MENU";
cout<<"\n\n\t04.EXIT";
cout<<"\n\n\tPlease Select Your Option (1-4) "; ch=getche();
switch(ch)
{
case'1':clrscr();
book_issue(); break;
case'2':book_deposit();
 
break;
case '3':admin_menu(); break;
case '4':exit(0); default :cout<<"\a";
}
}while(ch!='4');
}
